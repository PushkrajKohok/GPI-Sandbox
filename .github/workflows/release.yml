name: Build & Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch: {}

jobs:
  build:
    name: ${{ matrix.os }} build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        preset: [release]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Ninja
        uses: aminya/setup-cpp@v1
        with:
          cmake: true
          ninja: true
      - name: Configure
        run: cmake --preset ${{ matrix.preset }}
      - name: Build
        run: cmake --build --preset ${{ matrix.preset }}

      - name: Headless perf sanity (Pong)
        shell: bash
        run: |
          case "${{ runner.os }}" in
            Windows) BIN="out/${{ matrix.preset }}/gpi_host.exe" ;;
            macOS)   BIN="out/${{ matrix.preset }}/gpi_host" ;;
            Linux)   BIN="out/${{ matrix.preset }}/gpi_host" ;;
          esac
          $BIN --headless --frames 1200 --plugin pong

      - name: Package
        shell: bash
        run: |
          case "${{ runner.os }}" in
            Windows) pwsh scripts/package_win.ps1 ${{ matrix.preset }} ;;
            macOS)   bash scripts/package_mac.sh  ${{ matrix.preset }} ;;
            Linux)   bash scripts/package_linux.sh ${{ matrix.preset }} ;;
          esac

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gpi-${{ runner.os }}
          path: |
            dist/**/*
            artifacts/**/*
            out/${{ matrix.preset }}/plugins/bin/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist_all
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist_all/**/*
          generate_release_notes: true
